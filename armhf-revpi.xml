<!DOCTYPE e [ <!ENTITY pkglist SYSTEM "armhf-revpi-pkglist.xml"> ]>
<ns0:RootFileSystem xmlns:ns0="https://www.linutronix.de/projects/Elbe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" created="2009-05-20T08:50:56" revision="6" xsi:schemaLocation="https://www.linutronix.de/projects/Elbe dbsfed.xsd">
	<initvm>
		<buildtype>amd64</buildtype>
		<mirror>
			<primary_host>ftp.de.debian.org</primary_host>
			<primary_path>/debian</primary_path>
			<primary_proto>http</primary_proto>
			<url-list>
				<url>
					<binary>
						http://security.debian.org/debian-security buster/updates main
					</binary>
					<source>
						http://security.debian.org/debian-security buster/updates main
					</source>
				</url>
				<url>
					<binary>
						http://ftp.debian.org/debian buster-backports main
					</binary>
					<source>
						http://ftp.debian.org/debian buster-backports main
					</source>
				</url>
				<url>
					<binary>
						http://debian.linutronix.de/elbe buster main
					</binary>
					<source>
						http://debian.linutronix.de/elbe buster main
					</source>
					<key>
						http://debian.linutronix.de/elbe/elbe-repo.pub
					</key>
				</url>
				<url>
					<binary>
						http://debian.linutronix.de/elbe-common buster main
					</binary>
					<source>
						http://debian.linutronix.de/elbe-common buster main
					</source>
					<key>
						http://debian.linutronix.de/elbe-common/elbe-repo.pub
					</key>
				</url>
			</url-list>
		</mirror>
		<suite>buster</suite>
		<pkg-list>
			<pkg pin="buster-backports">qemu-user-static</pkg>
			<pkg>openssh-server</pkg>
			<pkg>debootstrap</pkg>
			<pkg>pbuilder</pkg>
			<pkg>ubuntu-keyring</pkg>
		</pkg-list>
		<finetuning>
			<command>
				wget https://archive.raspbian.org/raspbian.public.key -O - | gpg --no-default-keyring --keyring=/usr/share/keyrings/debian-archive-keyring.gpg --import
			</command>
		</finetuning>
		<preseed>
			<conf owner="pbuilder" key="pbuilder/mirrorsite" type="string" value="http://ftp.de.debian.org/debian"/>
		</preseed>
		<size>80G</size>
		<swap-size>10GiB</swap-size>
		<img>qcow2</img>
		<portforwarding>
		</portforwarding>
	</initvm>

	<project>

		<!-- human readable description of the project -->
		<name>armhf-revpi</name>
		<version>1.0</version>
		<description>
			buster rootfs for revolutionpi devices
		</description>
		<!-- buildtype is used to configure qemu-user and debian arch -->
		<buildtype>armhf</buildtype>
		<mirror>
			<!-- primary mirror is used by debootstrap -->
			<primary_host>raspbian.raspberrypi.org</primary_host>
			<primary_path>raspbian</primary_path>
			<primary_proto>http</primary_proto>
			<url-list>
				<url>
					<binary>http://raspbian.raspberrypi.org/raspbian buster contrib non-free rpi</binary>
					<source>http://raspbian.raspberrypi.org/raspbian buster main contrib non-free rpi</source>
					<key>http://raspbian.raspberrypi.org/raspbian.public.key</key>
				</url>
				<url>
					<binary>http://archive.raspberrypi.org/debian buster main ui</binary>
					<source>http://archive.raspberrypi.org/debian buster main ui</source>
					<key>http://archive.raspberrypi.org/debian/raspberrypi.gpg.key</key>
				</url>
				<url>
					<binary>http://packages.revolutionpi.de/ buster main contrib</binary>
					<key>https://raw.githubusercontent.com/zhan-kunbus/files4elbe/master/revpi.gpg.key</key>
				</url>
				<url>
					<binary>http://packages.revolutionpi.de/ buster-backports main</binary>
					<key>https://raw.githubusercontent.com/zhan-kunbus/files4elbe/master/revpi.gpg.key</key>
				</url>
				<url>
					<binary>http://repository.teamviewer.com/deb stable tvrevpi</binary>
					<key>https://raw.githubusercontent.com/zhan-kunbus/files4elbe/master/teamviewer-revpi.gpg.key</key>
				</url>
			</url-list>
		</mirror>

		<!-- debian testing? stable? unstable?? -->
		<suite>buster</suite>
	</project>
	<target>
		<!-- content for /etc/hostname -->
		<hostname>revpi</hostname>
		<!-- content for /etc/domainname -->
		<domain>revpi-domain</domain>
		<!-- root password -->
		<passwd>root</passwd>
		<!-- run a getty here: -->
		<console>ttyS0,115200</console>
		<!-- speed up build with debootstrap variant minbase.
		Using minbase here and explicit install of systemd later
		on speed up the installation process, since it reduces
		the emulated part (run in QEMU) of the installation
		significant.
		-->
		<package>
			<!-- build a tarball of the target image -->
			<tar>
				<name>armhf-revpi.tgz</name>
			</tar>
		</package>
		<!-- define an sdcard image -->
		<images>
			<msdoshd>
				<!-- name of the image file -->
				<name>armhf-revpi.img</name>
				<size>3500MiB</size>
					<!-- partition layout -->
					<partition>
						<size>50MiB</size>
						<!-- label needs to match with the fstab entry below -->
						<label>boot</label>
						<bootable/>
					</partition>
					<partition>
						<size>remain</size>
						<label>rfs</label>
					</partition>
			</msdoshd>
		</images>
		<fstab>
			<bylabel>
				<!-- label needs to match with an image entry aboth -->
				<label>rfs</label>
				<mountpoint>/</mountpoint>
				<fs>
					<!-- fs type and options -->
					<type>ext2</type>
					<tune2fs>-i 0</tune2fs>
				</fs>
			</bylabel>
			<bylabel>
				<label>boot</label>
				<mountpoint>/boot</mountpoint>
				<fs>
					<type>vfat</type>
				</fs>
			</bylabel>
		</fstab>

		<pkg-list> &pkglist; </pkg-list>
		<finetuning>
			<adduser shell="/bin/bash" home="/home/pi" create_group = "true" passwd="raspberrypi" groups="adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,netdev,i2c">pi</adduser>

			<!--  avoid installing unnecessary packages on this space-constrained machine-->
			<file dst="/etc/apt/apt.conf" append="true">
APT::Install-Recommends "false";

			</file>


			<!-- install packages which are failed at pkg-list inst stage because of licences problem -->
			<command>apt update</command>
			<command>apt install -y teamviewer-revpi hunspell-en-gb hyphen-en-gb</command>

			<!-- copy piTest source code -->
			<command>
				PICONTROLDIR=`mktemp -d -p /tmp piControl.XXXXXXXX`;
				git clone https://github.com/RevolutionPi/piControl $PICONTROLDIR;
				cp -pr $PICONTROLDIR/piTest /home/pi/demo;
				cp -p $PICONTROLDIR/piControl.h /home/pi/demo;
				sed -i -r -e 's%\.\./%%' /home/pi/demo/Makefile;
				chown -R pi:pi /home/pi/demo;
				chmod -R a+rX /home/pi/demo;
				rm -r $PICONTROLDIR
			</command>

			<!-- config the default timezone, and apply it -->
			<file dst="/etc/timezone" append="false">
				Europe/Berlin
			</file>
			<command>
				dpkg-reconfigure -fnoninteractive tzdata;
			</command>

			<!-- config the keyboard, and apply it -->
			<command>
				sed -i -r -e 's/^(XKBMODEL).*/\1="pc104"/' \
					-e 's/^(XKBLAYOUT).*/\1="us"/' \
					-e 's/^(XKBVARIANT).*/\1=""/' \
					/etc/default/keyboard;
				dpkg-reconfigure -fnoninteractive keyboard-configuration;
			</command>

			<!-- config the locale, and apply it -->
			<command>
				sed -i -r -e '1aLANG=en_GB.UTF-8' /etc/default/locale;
				sed -i -r -e 's/^(# en_US.UTF-8 UTF-8)/en_US.UTF-8 UTF-8/' /etc/locale.gen;
				dpkg-reconfigure -fnoninteractive locales;
			</command>

			<file dst="/etc/modules" append="true">
i2c-dev
piControl

			</file>

			<command>install -d -m 755 -o root -g root /etc/revpi</command>

			<command>install -d -m 700 -o pi -g pi /home/pi/.ssh</command>

			<command>echo "$(date +'%Y-%m-%d')-revpi-buster.img" >/etc/revpi/image-release</command>

			<!-- automatically bring up eth0 and eth1 again after a USB bus reset -->
			<command>sed -i -e '6i# allow-hotplug eth0\n# allow-hotplug eth1\n' /etc/network/interfaces</command>

			<file dst="/etc/wpa_supplicant/wpa_supplicant.conf" append="false">
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1

# WiFi of Revolutionary Pastries, Inc.
network={
        ssid=""
        psk=""
        key_mgmt=WPA-PSK
}

			</file>

			<file dst="/etc/dhcpcd.conf" append="true">
# Prioritize wlan0 routes over eth0 routes.
interface wlan0
        metric 100

			</file>



			<!--  harden network configuration-->
			<file dst="/etc/sysctl.conf" append="false">
#
# /etc/sysctl.conf - Configuration file for setting system variables
# See /etc/sysctl.d/ for additional system variables.
# See sysctl.conf (5) for information.
#

#kernel.domainname = example.com

# Uncomment the following to stop low-level messages on console
#kernel.printk = 3 4 1 3

##############################################################3
# Functions previously found in netbase
#

# Uncomment the next two lines to enable Spoof protection (reverse-path filter)
# Turn on Source Address Verification in all interfaces to
# prevent some spoofing attacks
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.rp_filter=1

# Uncomment the next line to enable TCP/IP SYN cookies
# See http://lwn.net/Articles/277146/
# Note: This may impact IPv6 TCP sessions too
#net.ipv4.tcp_syncookies=1

# Uncomment the next line to enable packet forwarding for IPv4
#net.ipv4.ip_forward=1

# Uncomment the next line to enable packet forwarding for IPv6
#  Enabling this option disables Stateless Address Autoconfiguration
#  based on Router Advertisements for this host
#net.ipv6.conf.all.forwarding=1


###################################################################
# Additional settings - these settings can improve the network
# security of the host and prevent against some network attacks
# including spoofing attacks and man in the middle attacks through
# redirection. Some network environments, however, require that these
# settings are disabled so review and enable them as needed.
#
# Do not accept ICMP redirects (prevent MITM attacks)
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv6.conf.eth0.accept_redirects = 0
# _or_
# Accept ICMP redirects only for gateways listed in our default
# gateway list (enabled by default)
# net.ipv4.conf.all.secure_redirects = 1
#
# Do not send ICMP redirects (we are not a router)
#net.ipv4.conf.all.send_redirects = 0
#
# Do not accept IP source route packets (we are not a router)
#net.ipv4.conf.all.accept_source_route = 0
#net.ipv6.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
#
# Reply to received ARP requests only if the target IP address to be
# resolved is a local address configured on the incoming interface
# (no cross-interface resolution)
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.default.arp_ignore = 1
#
# Log Martian Packets
#net.ipv4.conf.all.log_martians = 1
#

###################################################################
# Magic system request Key
# 0=disable, 1=enable all, >1 bitmask of sysrq functions
# See https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html
# for what other values do
#kernel.sysrq=438

			</file>

			<!--  display IP address at login prompt-->
			<command>sed -i -e '1s/$/ \\4 \\6/' /etc/issue</command>

			<!--  configure apache2-->
			<command>
				a2enmod ssl;
				sed -r -i -e 's/^(\tOptions .*Indexes.*)/#\1/' /etc/apache2/apache2.conf
			</command>

			<!-- install nodejs and nodered with an install script and revpi-nodes from npm repository-->

			<!-- # enable ssh daemon by default, disable swap, disable bluetooth on mini-uart -->
			<command>
				systemctl enable ssh;
				systemctl disable dphys-swapfile;
				systemctl disable hciuart;
			</command>

			<!--# disable 3rd party software -->
			<command>
				systemctl disable logiclab;
				systemctl disable nodered;
				systemctl disable noderedrevpinodes-server;
				systemctl disable revpipyload;
			</command>

			<!-- # boot to console by default, disable autologin -->
			<command>systemctl set-default multi-user.target</command>

			<command>
				if [ -e /etc/lightdm/lightdm.conf ] ; then
					sed -r -i -e "s/^autologin-user=/#autologin-user=/" /etc/lightdm/lightdm.conf;
				fi
			</command>

			<!-- # peg cpu at 1200 MHz to maximize spi0 throughput and avoid jitter -->
			<command>revpi-config enable perf-governor</command>

			<ln path="/lib/systemd/system/getty@.service">/etc/systemd/system/getty.target.wants/getty@tty1.service</ln>

			<!-- shrink target image -->
			<rm>/var/cache/apt/archives/*.deb</rm>
			<rm>/var/cache/apt/*.bin</rm>
			<rm>/var/lib/apt/lists/ftp*</rm>

			<!-- remove package lists, they will be outdated within days-->
			<rm> /var/lib/apt/lists/*Packages</rm>

			<!-- remove logs and ssh host keys -->
			<rm> /var/log/* </rm>
			<rm> /etc/ssh/ssh_host_*_key* </rm>

			<!--  autologin.conf enables autologin in raspios and raspios-full but not in raspios-lite -->
			<rm> /etc/systemd/system/getty@tty1.service.d/autologin.conf </rm>

			<command>
				sed -r -i -e 's/delaycompress/#delaycompress/'  /etc/logrotate.d/rsyslog;
				sed -r -i -e 's/sharedscripts/#sharedscripts/' /etc/logrotate.d/rsyslog;
				sed -r -i -e 's/#compress/compress/' /etc/logrotate.conf;
				sed -r -i -e '2i \
\
# limit size of each log file\
maxsize 10M\
\
# compress harder\
compresscmd /usr/bin/nice\
compressoptions /usr/bin/xz\
compressext .xz\
uncompresscmd /usr/bin/unxz' /etc/logrotate.conf;

			</command>

			<file dst="/etc/rsyslog.conf" append="false">
#  /etc/rsyslog.conf    Configuration file for rsyslog.
#
#                       For more information see
#                       /usr/share/doc/rsyslog-doc/html/rsyslog_conf.html


#################
#### MODULES ####
#################

module(load="imuxsock") # provides support for local system logging
module(load="imklog")   # provides kernel logging support
#module(load="immark")  # provides --MARK-- message capability

# provides UDP syslog reception
#module(load="imudp")
#input(type="imudp" port="514")

# provides TCP syslog reception
#module(load="imtcp")
#input(type="imtcp" port="514")


###########################
#### GLOBAL DIRECTIVES ####
###########################

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

#
# Set the default permissions for all log files.
#
$FileOwner root
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022

#
# Where to place spool and state files
#
$WorkDirectory /var/spool/rsyslog

#
# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf


###############
#### RULES ####
###############

#
# First some standard log files.  Log by facility.
#
auth,authpriv.*                 /var/log/auth.log
#*.*;auth,authpriv.none         -/var/log/syslog
#cron.*                         /var/log/cron.log
daemon.*                        -/var/log/daemon.log
kern.*                          -/var/log/kern.log
lpr.*                           -/var/log/lpr.log
mail.*                          -/var/log/mail.log
user.*                          -/var/log/user.log

#
# Logging for the mail system.  Split it up so that
# it is easy to write scripts to parse these files.
#
#mail.info                      -/var/log/mail.info
#mail.warn                      -/var/log/mail.warn
#mail.err                       /var/log/mail.err

#
# Some "catch-all" log files.
#
#*.=debug;\
#       auth,authpriv.none;\
#       news.none;mail.none     -/var/log/debug
*.*;\
        auth,authpriv.none;\
        daemon,kern.none;\
        lpr,mail.none;\
        user.none               -/var/log/messages

#
# Emergencies are sent to everybody logged in.
#
*.emerg                         :omusrmsg:*

			</file>
			<command>
		sed -i '/^echo "Be sure to write down the password if you have lost the sticker"/i echo "updating mime database..."\nupdate-mime-database /usr/share/mime\n' /usr/sbin/revpi-factory-reset
			</command>

		</finetuning>
		<pbuilder>
			<git revision="HEAD">https://github.com/zhan-kunbus/boot-conf.git</git>
			<git revision="HEAD">https://github.com/zhan-kunbus/raspi-config.git</git>
			<git revision="HEAD">https://github.com/zhan-kunbus/xserver-xorg-video-fbturbo.git</git>
		</pbuilder>
	</target>
</ns0:RootFileSystem>
